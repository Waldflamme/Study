#Датасет Titanic.csv
#Загрузить набор данных из датасета с информацией о пассажирах Титаника и посмотреть на первые несколько строк данных, чтобы убедиться, что данные загружены корректно.
#Выполнить первичный анализ данных: определить форму датасета с помощью и получить общую информации о колонках.
#Найти все строки, где есть пропущенные значения и удалить их.
#Сгруппировать данные по классу пассажиров на Титанике и рассчитать среднюю сумма билета.
#Выбрать всех пассажиров, которые выжили и были моложе 18 лет, рассчитывать общее количество таких пассажиров.


import pandas as pd

# === 1. Загрузка данных и просмотр первых строк ===
df = pd.read_csv('Titanic.csv')  # Загрузка датасета
print("Первые строки таблицы:")
print(df.head())  # Проверка корректности загрузки

# === 2. Форма и общая информация ===
print("\nФорма таблицы (строки, столбцы):", df.shape)
print("\nИнформация о столбцах:")
print(df.info())  # Общая информация о колонках, типах данных, пропусках

# === 3. Поиск и удаление строк с пропущенными значениями ===
missing_rows = df[df.isnull().any(axis=1)]  # Строки с хотя бы одним пропущенным значением
print("\nСтроки с пропущенными значениями:")
print(missing_rows)

df_cleaned = df.dropna()  # Удаление таких строк
print("\nФорма после удаления пропусков:", df_cleaned.shape)

# === 4. Средняя сумма билета по каждому классу пассажира ===
avg_fare_per_class = df_cleaned.groupby('Pclass')['Fare'].mean()
print("\nСредняя стоимость билета по классу:")
print(avg_fare_per_class)

# === 5. Выжившие пассажиры младше 18 лет ===
young_survivors = df_cleaned[(df_cleaned['Survived'] == 1) & (df_cleaned['Age'] < 18)]
count_young_survivors = young_survivors.shape[0]
print("\nКоличество выживших пассажиров младше 18 лет:", count_young_survivors)