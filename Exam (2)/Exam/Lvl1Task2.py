#Задан двухмерный массив ar1 размерности (25, 4), состоящий из случайных целых чисел в пределах от 0 до 15.
#Определить, в каких столбцах не менее 5 раз встречается значение, максимальное по своей строке (вывести индексы этих столбцов на экран с соответствующим комментарием).
#Для столбца, в котором таких значений наибольшее количество, заменить максимумы по строке на значения -1.
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import numpy as np

# Шаг 1: создаём массив ar1 размером (25, 4) со случайными целыми числами от 0 до 15 включительно
ar1 = np.random.randint(0, 16, size=(25, 4))

# Шаг 2: находим максимум в каждой строке
row_max = np.max(ar1, axis=1)
# np.max(..., axis=1): ищет максимум по строкам (в каждой строке свой максимум)

# Шаг 3: создаём булевый массив, где True — значение равно максимуму в строке
# Сравнение с row_max должно быть по строкам, поэтому делаем broadcasting: row_max[:, None]
max_mask = ar1 == row_max[:, None]

# Шаг 4: считаем, сколько раз максимум по строке встречается в каждом столбце
# max_mask — это булевый массив формы (25, 4)
# np.sum(..., axis=0): суммируем по строкам → получим массив из 4 элементов — по столбцам
col_max_counts = np.sum(max_mask, axis=0)

# Шаг 5: находим индексы столбцов, где максимум встречается ≥ 5 раз
columns_with_5_or_more = np.where(col_max_counts >= 5)[0]
# np.where(condition): возвращает индексы, где условие выполняется (True)

# Выводим результат
print("Индексы столбцов, где значение, равное максимуму по строке, встречается не менее 5 раз:")
print(columns_with_5_or_more)

# Шаг 6: находим индекс столбца с наибольшим количеством таких максимумов
max_col_index = np.argmax(col_max_counts)
# np.argmax: возвращает индекс максимального элемента

# Шаг 7: создаём копию массива, чтобы не менять исходный
modified_ar1 = ar1.copy()

# В столбце max_col_index заменим значения, которые одновременно:
#   - равны максимуму в строке
#   - находятся в этом столбце
# Для этого создаём логическую маску
# max_mask[:, max_col_index] — это булевый вектор (по строкам) для данного столбца
# Мы хотим заменить modified_ar1[i, max_col_index] на -1, если max_mask[i, max_col_index] == True
modified_ar1[max_mask[:, max_col_index], max_col_index] = -1

# Покажем результаты
print("\nИсходный массив ar1:\n", ar1)
print("\nМодифицированный массив (с заменами на -1 в столбце", max_col_index, "):\n", modified_ar1)

