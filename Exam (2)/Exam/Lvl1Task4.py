#Построить "one-hot encoding" для одномерного массива numpy из целых неотрицательных чисел (длина массива и максимальное значение в массиве заранее неизвестно).
#Протестировать свое решение на случайно сгенерированном одномерном массиве, соответствующем условию.
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import numpy as np  # Импортируем numpy для работы с массивами

# Шаг 1: создаём случайный одномерный массив из целых неотрицательных чисел
# np.random.randint(low, high, size): генерирует целые числа в заданном диапазоне
arr = np.random.randint(0, 10, size=15)  # Например, числа от 0 до 9, длиной 15

# Шаг 2: находим максимальное значение в массиве, чтобы задать количество столбцов в one-hot
num_classes = np.max(arr) + 1
# np.max(arr): определяет максимальное значение в массиве
# +1, потому что индексация с 0 — чтобы включить максимум

# Шаг 3: создаём one-hot encoding
one_hot = np.eye(num_classes)[arr]
# np.eye(num_classes): создаёт единичную матрицу размером (num_classes, num_classes)
# [arr]: индексируем строки этой матрицы по значениям arr — получаем one-hot

# Вывод результатов
print("Исходный массив:\n", arr)
print("\nOne-hot encoding:\n", one_hot)