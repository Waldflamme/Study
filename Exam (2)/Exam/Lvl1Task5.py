#Создать массив `arr` размерности (10, 4) из случайных целых чисел от 0 до 50.
#Найти самое частое число в массиве (вывести на экран его значение и информацию о расположении всех этих значений в исходном массиве).
#Вернуть массив (3, 4) содержащий 3 строки из исходного массива, содержащие наибольшее количество самых частотных значений.
#Код должен корректно работать в случае, если сразу несколько чисел являются самыми частотными.
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import numpy as np

# Создаём массив (10, 4) со случайными целыми числами от 0 до 50
arr = np.random.randint(0, 51, size=(10, 4))
print("Исходный массив:\n", arr)

# Находим уникальные значения и их количества
unique_vals, counts = np.unique(arr, return_counts=True)

# Находим максимальную частоту
max_count = np.max(counts)

# Выбираем все значения с максимальной частотой
most_frequent_vals = unique_vals[counts == max_count]
print("\nСамые частые значения (частота={}): {}".format(max_count, most_frequent_vals))

# Создаём маску для всех позиций, где встречаются самые частые значения
# Сравниваем arr с каждым из most_frequent_vals по оси с помощью broadcasting и агрегируем логическим ИЛИ
mask = np.isin(arr, most_frequent_vals)

print("\nМаска расположения самых частых значений (True - позиция):\n", mask)

# Подсчитываем количество таких значений в каждой строке
freq_counts_per_row = np.sum(mask, axis=1)

# Находим индексы трёх строк с максимальным количеством самых частых значений
top3_indices = np.argpartition(-freq_counts_per_row, 3)[:3]
# np.argpartition частично сортирует, вытаскивая 3 индекса с наибольшими значениями
# Сортируем их по убыванию количества
top3_indices = top3_indices[np.argsort(-freq_counts_per_row[top3_indices])]

print("\nИндексы строк с наибольшим количеством самых частых значений:", top3_indices)

# Возвращаем эти строки исходного массива
result = arr[top3_indices]

print("\nРезультат (3 строки с максимальным количеством самых частых чисел):\n", result)