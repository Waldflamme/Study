#Приблизительно (с погрешностью порядка 1%) рассчитать на какой части прямоугольника  значение функции  больше 0.25.
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import numpy as np  # Импортируем библиотеку numpy для работы с массивами и математическими функциями

N = 1000  # Задаём количество точек по каждой оси (чем больше - тем выше точность и размер сетки)

# Создаём одномерные массивы из N равномерно распределённых точек от 0 до 5
x = np.linspace(0, 5, N)
y = np.linspace(0, 5, N)

# Создаём двумерную сетку координат из одномерных массивов x и y
# X содержит копии массива x по строкам, Y содержит копии y по столбцам
X, Y = np.meshgrid(x, y)

# Вычисляем функцию Z в каждой точке сетки: Z = X * Y * sin(X) * cos(Y)
# Операции применяются поэлементно ко всем значениям массивов X и Y
Z = X * Y * np.sin(X) * np.cos(Y)

# Создаём булев массив mask той же формы, где True - если Z > 0.25, иначе False
mask = Z > 0.25

# Находим долю точек, для которых условие Z > 0.25 выполнено
# np.mean считает среднее значение булевого массива, где True = 1, False = 0
area_fraction = np.mean(mask)

# Выводим результат с четырьмя знаками после запятой
print(f"{area_fraction:.4f}")
