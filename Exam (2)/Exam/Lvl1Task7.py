#Датасет: sp500hst.txt
#Для тикера NVDA подсчитать, сколько дней прошло между максимальным и минимальным значением цены акции на открытии рынка и суммарный объем торгов за этот период (включая дни максимума и минимума).
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import pandas as pd

# Загрузка данных из файла в DataFrame
# Параметры:
# - header=None, потому что в файле нет заголовка
# - names — задаём имена столбцов для удобства работы
df = pd.read_csv('sp500hst.txt', header=None, names=['date', 'ticker', 'open', 'high', 'low', 'close', 'volume'])

# Фильтрация данных для тикера NVDA
df_nvda = df[df['ticker'] == 'NVDA']

# Находим индекс строки с максимальным значением цены открытия
max_open_idx = df_nvda['open'].idxmax()

# Находим индекс строки с минимальным значением цены открытия
min_open_idx = df_nvda['open'].idxmin()

# Определяем диапазон индексов между минимальным и максимальным значением открытия (включительно)
# Чтобы работать с диапазоном правильно, определяем границы с учётом порядка индексов
start_idx = min(min_open_idx, max_open_idx)
end_idx = max(min_open_idx, max_open_idx)

# Выбираем данные в этом диапазоне
period_data = df_nvda.loc[start_idx:end_idx]

# Вычисляем количество дней между максимумом и минимумом открытия, включая оба дня
days_passed = len(period_data)

# Суммируем объём торгов за этот период (включая дни максимума и минимума)
total_volume = period_data['volume'].sum()

print(f"Количество дней между максимальным и минимальным значением открытия: {days_passed}")
print(f"Суммарный объем торгов за этот период: {total_volume}")