#Датасет: titanic.csv
#Заменить все пропущенные числовые значения возраста на значения, равные среднему значению для представителей этого класса пассажиров данного пола (не выполнять операцию, если неизвестен и возраст, и класс билета пассажира или его пол).
#Решить задачу средствами numpy и/или pandas. Не использовать циклы и конструкции стандартного Python там, где можно использовать возможности данных библиотек.


import pandas as pd

# Загружаем данные
df = pd.read_csv('titanic.csv')

# Сохраняем количество пропущенных значений в 'Age' до заполнения
missing_before = df['Age'].isna().sum()

# Создаем маску строк, где можно заполнять: пропущен Age, но известны Pclass и Sex
mask = df['Age'].isna() & df['Pclass'].notna() & df['Sex'].notna()

# Считаем средние значения возраста по группам 'Pclass' и 'Sex'
# transform гарантирует, что результат будет той же длины, что и df, с соответствием строкам
group_means = df.groupby(['Pclass', 'Sex'])['Age'].transform('mean')

# Заполняем только строки, подходящие под маску
df.loc[mask, 'Age'] = group_means[mask]

# Сохраняем количество пропущенных значений в 'Age' после заполнения
missing_after = df['Age'].isna().sum()

# Считаем, сколько значений было заполнено
filled_count = missing_before - missing_after

print(f"Пропущенных значений в 'Age' до: {missing_before}")
print(f"Пропущенных значений в 'Age' после: {missing_after}")
print(f"Было заполнено значений: {filled_count}")

# Покажем примеры строк, где раньше был пропущен возраст (до заполнения)
# Здесь мы покажем только первые 5 примеров для наглядности
print("\nПримеры строк с ранее пропущенным возрастом (теперь заполнены):")
print(df.loc[mask].head())